<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:material="using:Uno.Material.Controls"
	xmlns:triggers="using:WindowsStateTriggers"
    xmlns:toolkit="using:Uno.UI.Toolkit">

	<!-- Card ToggleButton Variables -->
	<StaticResource x:Key="CardBackgroundColorBrush"
	                ResourceKey="MaterialSurfaceBrush" />

	<!-- Other Card Variables -->
	<CornerRadius x:Key="CardBorderRadius">4</CornerRadius>
	<Thickness x:Key="CardStrokeWidth">1</Thickness>
	<x:Double x:Key="CardElevation">6</x:Double>
	<Thickness x:Key="CardElevationMargin">6</Thickness>
	<Color x:Key="CardElevationShadowColor">#60000000</Color>

	<Style x:Key="CustomMaterialCard"
		   TargetType="material:Card">

		<Setter Property="Padding"
				Value="16,14" />
		<Setter Property="Background"
				Value="{StaticResource CardBackgroundColorBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource CardBorderRadius}" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="Margin"
				Value="{StaticResource CardElevationMargin}" />
		<Setter Property="Elevation"
				Value="{StaticResource CardElevation}" />
		<Setter Property="ShadowColor"
				Value="{StaticResource CardElevationShadowColor}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="material:Card">
					<!-- Elevated View -->
					<toolkit:ElevatedView x:Name="ElevatedRoot"
										  Margin="{TemplateBinding Margin}"
										  Background="{TemplateBinding Background}"
										  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalAlignment}"
										  CornerRadius="{TemplateBinding CornerRadius}"
										  Elevation="{TemplateBinding Elevation}"
										  ShadowColor="{TemplateBinding ShadowColor}"
										  MaxWidth="344">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
										<Setter Target="GridRoot.Opacity"
												Value="0.38" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LayoutModes">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Wide">
									<VisualState.Setters>
										<Setter Target="Column2.Width" Value="*" />
										<Setter Target="Details.(Grid.Row)" Value="0" />
										<Setter Target="Details.(Grid.Column)" Value="1" />
										<Setter Target="ElevatedRoot.MaxWidth" Value="1300" />
										<Setter Target="MediaContentPresenter.Height" Value="145" />
									</VisualState.Setters>
									<VisualState.StateTriggers>
										<triggers:AdaptiveTrigger MinWindowWidth="800" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="GridRoot"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="Column1" Width="*" />
								<ColumnDefinition x:Name="Column2" Width="0" />
							</Grid.ColumnDefinitions>

							<!-- Border for PointerOver State-->
							<Border Grid.RowSpan="2"
									Grid.ColumnSpan="2"
									x:Name="HoverOverlay"
									Background="{StaticResource MaterialOnSurfaceHoverBrush}"
									Opacity="0" />

							<!-- Border for Focused State-->
							<Border Grid.RowSpan="2"
									Grid.ColumnSpan="2"
									x:Name="FocusedOverlay"
									Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
									Opacity="0" />

							<!-- Media content part -->
							<ContentPresenter x:Name="MediaContentPresenter"
											  Height="200"
											  Content="{TemplateBinding MediaContent}"
											  ContentTemplate="{TemplateBinding MediaContentTemplate}"
											  VerticalAlignment="Top"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  IsHitTestVisible="False"
											  Visibility="{Binding MediaContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyOrNullToCollapsed}}" />

							<StackPanel Grid.Row="1" Grid.Column="0" x:Name="Details">
							<!-- Header part-->
							<ContentPresenter x:Name="HeaderContentPresenter"
											  Content="{TemplateBinding HeaderContent}"
											  ContentTemplate="{TemplateBinding HeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding HeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyOrNullToCollapsed}}" />

							<!-- SubHeader part-->
							<ContentPresenter x:Name="SubHeaderContentPresenter"
											  Content="{TemplateBinding SubHeaderContent}"
											  ContentTemplate="{TemplateBinding SubHeaderContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SubHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyOrNullToCollapsed}}" />

							<!-- Supporting Content part-->
							<ContentPresenter x:Name="SupportingContentPresenter"
											  Content="{TemplateBinding SupportingContent}"
											  ContentTemplate="{TemplateBinding SupportingContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding SupportingContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_EmptyOrNullToCollapsed}}" />

							<!-- Icons section part -->
							<ContentPresenter x:Name="IconsContentPresenter"
											  Content="{TemplateBinding IconsContent}"
											  ContentTemplate="{TemplateBinding IconsContentTemplate}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  AutomationProperties.AccessibilityView="Raw"
											  Visibility="{Binding IconsContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Material_NullToCollapsedConverter}}" />
							</StackPanel>
						</Grid>
					</toolkit:ElevatedView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
